version: '3.8'

services:
  # Frontend (React)
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
    depends_on:
      - backend
    volumes:
      - .:/app
      - /app/node_modules

  # Backend (Go)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - DB_TYPE=postgres
      - DATABASE_URL=postgres://nis_user:nis_password@postgres:5432/nis_platform?sslmode=disable
      - JWT_SECRET=your-super-secret-jwt-key-for-production
      - GIN_MODE=release
      - CORS_ORIGINS=http://localhost:3000,https://nis-community-platform-gb3h7ap5.sites.blink.new
    depends_on:
      - postgres
    volumes:
      - ./backend/uploads:/app/uploads

  # Database (PostgreSQL)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=nis_platform
      - POSTGRES_USER=nis_user
      - POSTGRES_PASSWORD=nis_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql

  # Redis (для кеширования, опционально)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: